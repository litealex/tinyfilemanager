!function(){"use strict";angular.module("fm",[])}(),function(){"use strict";function a(a,c,d,e,f){var g=this;this.getTemplateUrl=function(a){return f.getTemplateUrl(a)},this.getTemplate=function(a){var b=c({cache:e,url:f.getTemplateUrl(a),method:"get"}).then(function(a){return a.data});return b},this.getVeiwTemplateUrl=function(){return f.getTemplateUrl("fmFiles"+f.viewType)},this.getViewType=function(){return f.viewType},this.setViewType=function(a){f.viewType=a},this.files={},this.folders={},this.isMove=null,this.pathFrom=null,this.buffer=null,this.selectedFiles=null,this.getFolders=function(){return c({url:f.actionsUrl,method:"GET",cache:!1}).then(function(a){return g.folders.tree=a.data,g.folders})},this.loadFiles=function(b){return c({url:f.actionsUrl,params:{virtualpath:b},method:"GET",cache:!1}).then(function(c){var d=g.files;d.list=c.data.files,d.list.forEach(function(a){a.fullPath=b+a.name}),d.path=b,d.pathChains=(b||"").split("/").filter(function(a){return a}).map(function(a){return{name:a}}),a.$broadcast("fmFolderSelected")})},this.refreshFolder=function(){return this.loadFiles(this.files.path)},this.upload=function(b,c){var e=new FormData,g=new XMLHttpRequest;return e.append("virtualpath",this.files.path),e.append("c","upload"),b.forEach(function(a){e.append("files[]",a)}),g.open("POST",f.actionsUrl),d(function(b,d){g.onload=function(){b(g.responseText)},g.upload.onprogress=function(){(c||angular.noop).apply(this,arguments),a.$apply()},g.onerror=d,g.send(e)})},this.changeFrame=function(b){a.$broadcast("fmChangeFrame",b)},this.copy=function(a){this.isMove=a,this.pathFrom=this.files.path,this.buffer=b(this.selectedFiles),this.broadcast("fmCopied")},this.past=function(){return c({url:f.actionsUrl,method:"POST",params:{c:this.isMove?"move":"copy",virtualpath:this.files.path,addInfo:JSON.stringify({files:this.buffer,from:this.pathFrom})}}).then(function(){g.isMove=null,g.broadcast("fmPasted")})},this.removeFiles=function(){return c({url:f.actionsUrl,method:"POST",params:{c:"del",virtualpath:this.files.path,addInfo:JSON.stringify(b(this.selectedFiles))}})},this.folderActions=function(a,b){return c({url:f.actionsUrl,method:"POST",params:{virtualpath:this.files.path+(b||""),c:a}}).then(function(){g.getFolders()})},this.broadcast=a.$broadcast.bind(a)}function b(a){return a.map(function(a){return a.name})}angular.module("fm").service("foldersSrv",["$rootScope","$http","$q","$templateCache","fmCfg",a]).value("fmCfg",{actionsUrl:"",templatesPrefix:"/templates/",getTemplateUrl:function(a){return this.templatesPrefix+a+".html"},imgExtensions:["jpg","gif","png","jpeg","bmp","svg"],extensionPrefix512:"/img/512px/",extensionPrefix32:"/img/32px/",viewType:"list"})}(),function(){"use strict";function a(a,b){b.getFolders().then(function(b){a.folders=b,b.tree.selected=!0}),a.$watch("path",function(a){a&&b.loadFiles(a).then(function(){b.changeFrame("files")})}),a.$on("fmChangePath",function(b,c){a.path=c})}function b(a,b,c){a.getViewTemplate=function(){return c.getVeiwTemplateUrl()},a.folders=c.folders,a.files=c.files,a.$watch("files",function(a){a.list&&(c.selectedFiles=b(a.list,{selected:!0}),c.broadcast("fmFilesSelect",c.selectedFiles.length))},!0),a.loadFiles=function(b){var d=a.folders.tree.prefix,e=("/"===d?"":d)+"/"+a.files.pathChains.map(function(a){return a.name}).slice(0,b+1).join("/")+"/";c.broadcast("fmChangePath",e)}}function c(a,b){a.menuUrl=b.getTemplateUrl("fmMenu"),a.$on("fmFolderSelected",function(){a.isFolderSelected=!0}),a.$on("fmFilesSelect",function(b,c){a.filesSelectedCount=c}),a.$on("fmCopied",function(){a.isCopied=!0}),a.$on("fmPasted",function(){a.isCopied=!1}),a.showUploadForm=function(){b.changeFrame("upload")},a.removeFiles=function(){b.removeFiles().then(function(){b.refreshFolder(),b.broadcast("fmDialogClose")})},a.removeFolder=function(){b.folderActions("delfolder").then(function(){var a=b.files.pathChains;a.pop(),b.broadcast("fmChangePath","/"+a.map(function(a){return a.name}).join("/")+"/"),b.broadcast("fmDialogClose")})},a.createFolder=function(a){b.folderActions("createfolder",a).then(function(){b.broadcast("fmChangePath",b.files.path+a+"/").refreshFolder()})},a.copyFiles=function(){b.copy()},a.moveFiles=function(){b.copy(!0)},a.pastFiles=function(){b.past().then(function(){b.refreshFolder()})},a.type=b.getViewType(),a.setView=function(c){a.type=c,b.setViewType(c)},a.refresh=function(){b.refreshFolder(),b.getFolders()}}function d(a,b){a.$on("fmFilesSelect",function(b,c){a.filesSelectedCount=c}),a.insert=function(){a.$emit("fmInsertFiles",b.selectedFiles.map(function(a){return a.fullPath}))}}function e(a,b){a.files=[],a.addToList=function(b){a.files=a.files.concat(b)},a.upload=function(c){a.uploading=!0,b.upload(c,function(b){a.$broadcast("fmUploading",b.loaded/b.total*100)}).then(function(){b.refreshFolder().then(function(){a.uploading=!1,a.close()})})},a.remove=function(b){a.files.splice(b,1)}}angular.module("fm").controller("FoldersController",["$scope","foldersSrv",a]).controller("FilesController",["$scope","filterFilter","foldersSrv",b]).controller("MenuController",["$scope","foldersSrv",c]).controller("InsertController",["$scope","foldersSrv",d]).controller("UploadController",["$scope","foldersSrv",e])}(),function(){"use strict";function a(){}function b(a,b,c){return{scope:!0,link:function(d,e,f){var g=null;d.level=(d.level||0)+1,d.isHide=!1,1===d.level&&(d.load=function(a){b(f.fmFoldersPath).assign(d.$parent,a)},d.isSelected=function(a){return a===g},d.$watch(f.fmFoldersPath,function(a){g=a})),d.toggleCollapse=function(){d.isHide=!d.isHide},d.$watch(f.fmFoldersTree,function(a){a&&(void 0===d.prefix&&(d.prefix=a.prefix||"/"),d.folder=a,d.$fullPath=1===d.level?d.prefix+a.name+"/":d.$fullPath+a.name+"/",a.fullPath=d.$fullPath,a.selected&&d.load(a.fullPath))}),c.getTemplate("fmFoldersTree").then(function(b){e.append(a(b)(d))})}}}function c(){return function(a,b,c){b.on(c.stopEvent,function(a){a.stopPropagation()})}}function d(a){return{scope:!0,link:function(b,c,d){c.on("dragover",function(){return c.on("dragleave",function(){}),!1}).on("drop",function(c){c.preventDefault(),b.$files=Array.prototype.slice.call(c.originalEvent.dataTransfer.files),b.$apply(function(){a(d.fmDropFiles)(b)})}),b.$on("fmEndUploading",function(){})}}}function e(a){return{scope:!0,templateUrl:a.getTemplateUrl("fmProgress"),link:function(a,b,c){a.$on(c.fmProgress,function(b,c){"number"==typeof c?(a.visible=!0,a.progress=c.toFixed(2)):a.visible=!1})}}}function f(a){var b=a.imgExtensions,c=a.extensionPrefix512;return{scope:!0,templateUrl:a.getTemplateUrl("fmFile"),link:function(a,d,e){var f=e.fmFile,g=(f.split(".").pop()||"").toLowerCase();-1==b.indexOf(g)?(a.file=c+g+".png",d.find("img").on("error",function(){this.src=c+"_blank.png"})):a.file=e.fmFilePrefix+f}}}function g(a,b,c){return{scope:!0,link:function(d,e,f){var g=!1,h=angular.element('<div class="fm-dialog"></div>'),i=null;f.fmDialogData&&(d.data=b(f.fmDialogData)(d)),d.close=function(){h&&h.remove(),g=!1},e.on("click",function(){g?d.close():c.getTemplate(f.fmDialog).then(function(b){if(!i){i={left:0,top:0};for(var c=e;c=c.parent();){var f=c.offset();if(!f)break;i.left+=f.left,i.top+=f.top}}h.html(a(b)(d)).css(e.offset()),angular.element("body").prepend(h).removeClass("modal-open"),g=!0}),h.on("submit",function(){d.close()})}),d.$on("fmDialogClose",function(){d.close()})}}}function h(a){var b=a.extensionPrefix32;return{link:function(a,c,d){var e=(d.fmFileExt.split(".").pop()||"").toLowerCase();c.attr("src",b+e+".png"),c.on("error",function(){this.src=b+"_blank.png"})}}}function i(a){var b=angular.element('<input style="display: none" multiple="multiple" type="file"/>'),c=angular.element("body");return{scope:!0,link:function(d,e,f){c.append(b),b.on("change",function(){d.$files=Array.prototype.slice.call(this.files),d.$apply(function(){a(f.fmUploadFile)(d)})}),e.on("click",function(){b.click()})}}}angular.module("fm").directive("fmManager",[a]).directive("fmFoldersTree",["$compile","$parse","foldersSrv",b]).directive("stopEvent",[c]).directive("fmDropFiles",["$parse","$compile",d]).directive("fmProgress",["fmCfg",e]).directive("fmFile",["fmCfg",f]).directive("fmDialog",["$compile","$parse","foldersSrv",g]).directive("fmFileExt",["fmCfg",h]).directive("fmUploadFile",["$parse",i])}();